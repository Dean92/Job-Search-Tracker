{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7039/api/';\n    this.currentUserSource = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSource.asObservable();\n  }\n  login(model) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(map(response => {\n      const user = response;\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.currentUserSource.next(user);\n      }\n    }));\n  }\n  setCurrentUser(user) {\n    this.currentUserSource.next(user);\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,EAAEC,GAAG,QAAQ,MAAM;;;AAM3C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,YAAO,GAAG,6BAA6B;IAC/B,sBAAiB,GAAG,IAAIJ,eAAe,CAAc,IAAI,CAAC;IAClE,iBAAY,GAAG,IAAI,CAACK,iBAAiB,CAACC,YAAY,EAAE;EAEb;EAEvCC,KAAK,CAACC,KAAU;IACd,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,IAAI,CAACC,OAAO,GAAG,eAAe,EAAEF,KAAK,CAAC,CAACG,IAAI,CACrEV,GAAG,CAAEW,QAAc,IAAI;MACrB,MAAMC,IAAI,GAAGD,QAAQ;MACrB,IAAIC,IAAI,EAAE;QACRC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;QAClD,IAAI,CAACR,iBAAiB,CAACa,IAAI,CAACL,IAAI,CAAC;;IAErC,CAAC,CAAC,CACH;EACH;EAEAM,cAAc,CAACN,IAAU;IACvB,IAAI,CAACR,iBAAiB,CAACa,IAAI,CAACL,IAAI,CAAC;EACnC;EAEAO,MAAM;IACJN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAChB,iBAAiB,CAACa,IAAI,CAAC,IAAI,CAAC;EACnC;;AA1BWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAoB,SAAdpB,cAAc;EAAAqB,YAFb;AAAM","names":["BehaviorSubject","map","AccountService","constructor","http","currentUserSource","asObservable","login","model","post","baseUrl","pipe","response","user","localStorage","setItem","JSON","stringify","next","setCurrentUser","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\deanm\\source\\repos\\JobSearchTracker\\ClientApp\\src\\app\\_services\\account.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, map } from 'rxjs';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = 'https://localhost:7039/api/';\n  private currentUserSource = new BehaviorSubject<User | null>(null);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n      })\n    );\n  }\n\n  setCurrentUser(user: User) {\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}