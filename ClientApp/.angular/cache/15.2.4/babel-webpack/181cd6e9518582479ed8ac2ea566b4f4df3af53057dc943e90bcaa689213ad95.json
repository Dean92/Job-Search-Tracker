{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserInfoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n  }\n  getUser(username) {\n    return this.http.get(this.baseUrl + 'users/' + username);\n  }\n  addJob(userId, job) {}\n}\nUserInfoService.ɵfac = function UserInfoService_Factory(t) {\n  return new (t || UserInfoService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserInfoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserInfoService,\n  factory: UserInfoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAGH,WAAW,CAACI,MAAM;EAEW;EAEvCC,OAAO,CAACC,QAAgB;IACtB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACC,OAAO,GAAG,QAAQ,GAAGF,QAAQ,CAAC;EACpE;EAEAG,MAAM,CAACC,MAAc,EAAEC,GAAQ,GAAG;;AATvBV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAW,SAAfX,eAAe;EAAAY,YAFd;AAAM","names":["environment","UserInfoService","constructor","http","apiUrl","getUser","username","get","baseUrl","addJob","userId","job","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\deanm\\source\\repos\\JobSearchTracker\\ClientApp\\src\\app\\_services\\user-info.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { UserInfo } from '../_models/userInfo';\nimport { Observable } from 'rxjs';\nimport { Job } from '../_models/job';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserInfoService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUser(username: string) {\n    return this.http.get<UserInfo>(this.baseUrl + 'users/' + username);\n  }\n\n  addJob(userId: number, job: Job) {}\n\n  // getJobsForUser(username: string): Observable<Job[]> {\n  //   const url = `${this.baseUrl}users/${username}`;\n  //   return this.http.get<Job[]>(url);\n  // }\n\n  // getHttpOptions() {\n  //   const userString = localStorage.getItem('user');\n  //   if (!userString) return;\n  //   const user = JSON.parse(userString);\n  //   return {\n  //     headers: new HttpHeaders({\n  //       Authorization: 'Bearer ' + user,\n  //     }),\n  //   };\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}