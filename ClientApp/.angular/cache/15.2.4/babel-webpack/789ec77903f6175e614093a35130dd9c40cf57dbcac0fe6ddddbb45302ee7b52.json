{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7039/api/';\n  }\n  login(model) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(map(response => {\n      const user = response;\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n    }));\n  }\n  logout() {\n    localStorage.removeItem('user');\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;AAK1B,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,6BAA6B;EAEA;EAEvCC,KAAK,CAACC,KAAU;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,eAAe,EAAEF,KAAK,CAAC,CAACG,IAAI,CAC/DR,GAAG,CAAES,QAAa,IAAI;MACpB,MAAMC,IAAI,GAAGD,QAAQ;MACrB,IAAIC,IAAI,EAAE;QACRC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;;IAEtD,CAAC,CAAC,CACH;EACH;EAEAK,MAAM;IACJJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC;;AAlBWf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["map","AccountService","constructor","http","login","model","post","baseUrl","pipe","response","user","localStorage","setItem","JSON","stringify","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\deanm\\source\\repos\\JobSearchTracker\\ClientApp\\src\\app\\_services\\account.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = 'https://localhost:7039/api/';\n\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n        }\n      })\n    );\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}